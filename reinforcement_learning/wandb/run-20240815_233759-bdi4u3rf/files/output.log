
24895
Dataset({
    features: ['review', 'label', 'input_ids', 'query'],
    num_rows: 24895
})
Dataset({
    features: ['review', 'label', 'input_ids', 'query'],
    num_rows: 24895
})
AutoModelForCausalLMWithValueHead(
  (pretrained_model): GPT2LMHeadModel(
    (transformer): GPT2Model(
      (wte): Embedding(50257, 768)
      (wpe): Embedding(1024, 768)
      (drop): Dropout(p=0.1, inplace=False)
      (h): ModuleList(
        (0-11): 12 x GPT2Block(
          (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): GPT2SdpaAttention(
            (c_attn): Conv1D()
            (c_proj): Conv1D()
            (attn_dropout): Dropout(p=0.1, inplace=False)
            (resid_dropout): Dropout(p=0.1, inplace=False)
          )
          (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (mlp): GPT2MLP(
            (c_fc): Conv1D()
            (c_proj): Conv1D()
            (act): NewGELUActivation()
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
      (ln_f): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
    (lm_head): Linear(in_features=768, out_features=50257, bias=False)
  )
  (v_head): ValueHead(
    (dropout): Dropout(p=0.1, inplace=False)
    (summary): Linear(in_features=768, out_features=1, bias=True)
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
)
GPT2TokenizerFast(name_or_path='lvwerra/gpt2-imdb', vocab_size=50257, model_max_length=1024, is_fast=True, padding_side='right', truncation_side='right', special_tokens={'bos_token': '<|endoftext|>', 'eos_token': '<|endoftext|>', 'unk_token': '<|endoftext|>', 'pad_token': '<|endoftext|>'}, clean_up_tokenization_spaces=True),  added_tokens_decoder={
	50256: AddedToken("<|endoftext|>", rstrip=False, lstrip=False, single_word=False, normalized=True, special=True),
}
<trl.trainer.ppo_trainer.PPOTrainer object at 0x7fda207b7340>
0
/home/kennykguo/anaconda3/envs/deep-learning/lib/python3.8/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/kennykguo/anaconda3/envs/deep-learning/lib/python3.8/site-packages/transformers/pipelines/text_classification.py:104: UserWarning: `return_all_scores` is now deprecated,  if want a similar functionality use `top_k=None` instead of `return_all_scores=True` or `top_k=1` instead of `return_all_scores=False`.
  warnings.warn(
[[{'label': 'NEGATIVE', 'score': 2.335048198699951}, {'label': 'POSITIVE', 'score': -2.726576566696167}]]
[[{'label': 'NEGATIVE', 'score': -2.294790029525757}, {'label': 'POSITIVE', 'score': 2.557039737701416}]]
<accelerate.data_loader.DataLoaderShard object at 0x7fda207b7ac0>
0it [00:00, ?it/s]
[tensor([ 1858,   389, 22051], device='cuda:0'), tensor([8585,  734, 3470, 1866], device='cuda:0'), tensor([ 818,  262, 3095,   12, 1129, 1270], device='cuda:0'), tensor([  40, 2236], device='cuda:0'), tensor([1212,  905,  318,  257, 2818, 1672], device='cuda:0'), tensor([   40, 18548,  6901,   703,  7818,   428,  3807], device='cuda:0'), tensor([40630,  2084,    11,   314,  1043,   257,   366], device='cuda:0'), tensor([  40,  716,  407, 1654], device='cuda:0'), tensor([2514, 2089], device='cuda:0'), tensor([1212, 3807,  318,  407,  534, 7226, 9961], device='cuda:0'), tensor([22253,  1717,   494,   290,  4403,  1717], device='cuda:0'), tensor([   40,  1842,   262, 33016], device='cuda:0'), tensor([ 1212, 40870,  3918,  3807,  2753], device='cuda:0'), tensor([ 40, 691], device='cuda:0'), tensor([5308, 7574], device='cuda:0'), tensor([  40,  423,  257, 4203,  326, 1583], device='cuda:0'), tensor([29688,   836,   470,  5602], device='cuda:0'), tensor([  40, 1392,  257,  922, 6487, 3555], device='cuda:0'), tensor([2215,  616, 1478,   12], device='cuda:0'), tensor([ 818, 6273], device='cuda:0'), tensor([  40, 1842,  428,  905], device='cuda:0'), tensor([1212,  318,  281, 6275], device='cuda:0'), tensor([   32,  2646,   588, 23181, 16156,   290], device='cuda:0'), tensor([  32,  845, 1913, 3807,   13], device='cuda:0'), tensor([505, 286, 262], device='cuda:0'), tensor([5962,  286,  477], device='cuda:0'), tensor([26554,   428,  3807,   550,   502, 35820], device='cuda:0'), tensor([  40, 2497], device='cuda:0'), tensor([ 6090,  9599,   466,   922, 36378], device='cuda:0'), tensor([6104, 4785], device='cuda:0'), tensor([  40,  635, 2497,  428], device='cuda:0'), tensor([   40, 17666,   760,  1521,   661], device='cuda:0'), tensor([ 1026,   338,   257,   922,  1517,   383, 15178], device='cuda:0'), tensor([ 464, 3807], device='cuda:0'), tensor([ 3260,   345,   766, 24417, 14031,    11], device='cuda:0'), tensor([   1,   39, 1324,  268,  301], device='cuda:0'), tensor([1026,  338], device='cuda:0'), tensor([6610, 9623, 2646,  422,  257, 1499], device='cuda:0'), tensor([32476,    11,   257], device='cuda:0'), tensor([ 1212,  1244,   307, 24479,    11,   475,   428], device='cuda:0'), tensor([   35,   388,  1044, 13692], device='cuda:0'), tensor([  40, 2497,  428], device='cuda:0'), tensor([ 1212,  3807,  1595,   470,   772, 10925,   257], device='cuda:0'), tensor([  40, 2993], device='cuda:0'), tensor([1026,  468,  691], device='cuda:0'), tensor([1212,  318,  257, 1844], device='cuda:0'), tensor([    1,  9171, 37670,  5958,     1,  1745,   257], device='cuda:0'), tensor([8117,  373,  617, 3872], device='cuda:0'), tensor([  56, 1666,   64,    0, 1002,  345], device='cuda:0'), tensor([5703,  780, 2130], device='cuda:0'), tensor([2725,  415], device='cuda:0'), tensor([   40,  1043,   428,  3807, 14262], device='cuda:0'), tensor([1212,  318], device='cuda:0'), tensor([   1,   32,  430, 7637,    1], device='cuda:0'), tensor([   27,  1671,  1220,  6927,  1671, 11037], device='cuda:0'), tensor([22017,   340], device='cuda:0'), tensor([    1, 17821], device='cuda:0'), tensor([15322,   412,  1279], device='cuda:0'), tensor([29318,  5613,  2097], device='cuda:0'), tensor([  32, 2407,  922, 2646], device='cuda:0'), tensor([ 40, 892, 262], device='cuda:0'), tensor([  40, 4236,  351, 2279,  661], device='cuda:0'), tensor([    1, 30847, 33989,     1,  7599, 30940], device='cuda:0'), tensor([ 1212,  4112, 13913], device='cuda:0'), tensor([  464,  3126, 18265], device='cuda:0'), tensor([1212, 2646,  373, 6275,  532,  262], device='cuda:0'), tensor([  1, 464], device='cuda:0'), tensor([5211,  407], device='cuda:0'), tensor([  40,  423,  284, 9159,  326], device='cuda:0'), tensor([1212, 3807], device='cuda:0'), tensor([  986, 25587,   484,   821], device='cuda:0'), tensor([1212,  318,  530,  286,  262, 5290, 6918], device='cuda:0'), tensor([  40, 1464, 2883], device='cuda:0'), tensor([10995,    11,   262, 37942], device='cuda:0'), tensor([5779,   11, 1312], device='cuda:0'), tensor([17121, 12958,  1754,   373,   284], device='cuda:0'), tensor([1212, 3807,  318], device='cuda:0'), tensor([5962,  286,  477,   11,  428, 3807], device='cuda:0'), tensor([ 40, 373], device='cuda:0'), tensor([1532,  345,  588, 7110], device='cuda:0'), tensor([  986, 26698, 11225], device='cuda:0'), tensor([13615,  1675,   383], device='cuda:0'), tensor([ 8248, 12338, 20458, 23281,   481], device='cuda:0'), tensor([ 464, 5544,  366], device='cuda:0'), tensor([  40,  423, 1464], device='cuda:0'), tensor([  40, 1053, 1775,  428, 2646, 1811, 1661], device='cuda:0'), tensor([1026,  338,  407], device='cuda:0'), tensor([1212, 3807,  857,  407, 1107, 7719, 3988], device='cuda:0'), tensor([  818, 15275,   286, 46499,   670,   416], device='cuda:0'), tensor([10943,  5603, 20913,  6226, 49713,  4877], device='cuda:0'), tensor([3118, 5589], device='cuda:0'), tensor([5756,  502, 1560,  345, 1223,  546,  428], device='cuda:0'), tensor([ 40, 655], device='cuda:0'), tensor([1212, 3807], device='cuda:0'), tensor([2061, 1838], device='cuda:0'), tensor([6104,  611,  428, 2646,  373, 7910,  257], device='cuda:0'), tensor([ 3987,   470,  6004,   284,   277, 21584,    12], device='cuda:0'), tensor([1212,  318,  281, 6275,  475], device='cuda:0'), tensor([  464, 43786,   318,   546,   986], device='cuda:0'), tensor([  40,  550,  645, 2126,  644,  428], device='cuda:0'), tensor([1026,  338], device='cuda:0'), tensor([  40, 2497,  428, 2646], device='cuda:0'), tensor([  47, 9798], device='cuda:0'), tensor([ 2601, 13416,   284,  3950,   290], device='cuda:0'), tensor([  818,  4068,  1466,   389, 12244,   422], device='cuda:0'), tensor([  464, 39078,   396,   373,   925,   319], device='cuda:0'), tensor([    1, 25255, 20836,     1,   318], device='cuda:0'), tensor([6610,  287,  262,  484,  836], device='cuda:0'), tensor([1212, 3807,  318], device='cuda:0'), tensor([  40, 1043,  705, 7575], device='cuda:0'), tensor([39750,   318,  3562,   284], device='cuda:0'), tensor([45648,   644], device='cuda:0'), tensor([4366, 6918,  389, 3172,  297,  298], device='cuda:0'), tensor([3666, 1793,   13,  770, 3807], device='cuda:0'), tensor([5779,   11,  314, 1183], device='cuda:0'), tensor([1212, 2331,  588,  734, 7328], device='cuda:0'), tensor([ 270,  338,  257,  845, 3621, 3807,  290], device='cuda:0'), tensor([4366,  661,  423], device='cuda:0'), tensor([22017,    11,   257], device='cuda:0'), tensor([3152,  262], device='cuda:0'), tensor([1212, 3807,  318], device='cuda:0'), tensor([2043,  373,  645, 2565,  290,  340,  373], device='cuda:0'), tensor([14573, 21657,   318,  1682,  4750,   287], device='cuda:0'), tensor([1858,  338,  645], device='cuda:0'), tensor([1532,  287], device='cuda:0'), tensor([2215,  314,  467,  284,  766], device='cuda:0'), tensor([5962,  286], device='cuda:0'), tensor([2437,  466,  314, 2221,  284], device='cuda:0')]
0it [00:00, ?it/s]
128
0it [00:00, ?it/s]
128
0it [00:00, ?it/s]
128
[tensor([45359,  2257, 28184, 10008, 20498], device='cuda:0'), tensor([  40,  836,  470,  760, 1521,   11], device='cuda:0'), tensor([1212, 3807,  318,  655,  257], device='cuda:0'), tensor([ 1890,  1136, 21227,   290, 20576,   710,   290], device='cuda:0'), tensor([10374, 39389,  7299], device='cuda:0'), tensor([6109, 1200, 6461], device='cuda:0'), tensor([17353,   326,   517, 14348], device='cuda:0'), tensor([ 40, 836, 470, 760, 810, 284], device='cuda:0'), tensor([   32,  7348,   473, 48915, 34737,   357], device='cuda:0'), tensor([  40, 1975,  287], device='cuda:0'), tensor([16371,  3105,    12, 32416], device='cuda:0'), tensor([3198, 1517], device='cuda:0'), tensor([  40, 1276, 9828], device='cuda:0'), tensor([6610, 5588, 2959, 1276,   12, 3826], device='cuda:0'), tensor([  40, 3505, 4379,  428], device='cuda:0'), tensor([1212, 3807,  318,  852], device='cuda:0'), tensor([5189,  262], device='cuda:0'), tensor([  986,  1169,  1200, 10544,   547, 15774,    13], device='cuda:0'), tensor([2215,  345], device='cuda:0'), tensor([34617,   290,   345], device='cuda:0'), tensor([ 9139,  3225, 14654], device='cuda:0'), tensor([ 464, 3807,  373,  881, 1365], device='cuda:0'), tensor([  40, 2497,  428, 2646,  379], device='cuda:0'), tensor([ 1722,   428,  3807,   318,  3190,   287, 14780], device='cuda:0'), tensor([1722, 3737], device='cuda:0'), tensor([   36, 20760,   272,  5426,    11, 14590,  4143], device='cuda:0'), tensor([3666, 3656,  290,  314,  389], device='cuda:0'), tensor([  818,   262,   416, 21260,  1528,   286], device='cuda:0'), tensor([ 5703,   355,  4186, 37951,   782], device='cuda:0'), tensor([283, 456], device='cuda:0'), tensor([  40, 1816,  284,  766], device='cuda:0'), tensor([15001,   319,   281,  4036,  9691,  9336,    11], device='cuda:0'), tensor([1858,  460,  307,  645, 2683], device='cuda:0'), tensor([9627, 3925], device='cuda:0'), tensor([   40,  2492,   470, 12451], device='cuda:0'), tensor([ 2079,    13, 17032,     4], device='cuda:0'), tensor([   40,   423,   257,  2769, 24976], device='cuda:0'), tensor([    1, 11122,  3637], device='cuda:0'), tensor([4342,  338,  281, 3499, 1310], device='cuda:0'), tensor([  40, 8288, 3016,  477,  262, 6918,  287], device='cuda:0'), tensor([26392,  2067,   262,  4019,    82,  5182,   286], device='cuda:0'), tensor([27984,   318,  1016,   832,   257], device='cuda:0'), tensor([3666, 3651,  743], device='cuda:0'), tensor([ 7248,   287, 28319,    11, 24545,  5451,    11], device='cuda:0'), tensor([1212, 3195, 3807], device='cuda:0'), tensor([  464,   517,   314,  2342, 20320], device='cuda:0'), tensor([ 1212,  3807,   373, 12361,    13], device='cuda:0'), tensor([ 1135,   423,   257, 13546], device='cuda:0'), tensor([1212,  318], device='cuda:0'), tensor([  818,   262, 44782], device='cuda:0'), tensor([  40, 1569, 5201, 4379,  262], device='cuda:0'), tensor([32117, 20678], device='cuda:0'), tensor([  40, 3088,  284, 2342], device='cuda:0'), tensor([  50,  707,  428,  257, 3155, 1661,  319], device='cuda:0'), tensor([  40,  716,  691, 1367,  812, 1468], device='cuda:0'), tensor([ 1212,  3807,   373,   523, 20039,    13,  6363], device='cuda:0'), tensor([1212, 3122], device='cuda:0'), tensor([ 464, 2646], device='cuda:0'), tensor([1212,  318], device='cuda:0'), tensor([ 3646,  2064, 24020,  2796,  1326], device='cuda:0'), tensor([37058,  5486,    11,   262,  7110], device='cuda:0'), tensor([26437,    12], device='cuda:0'), tensor([ 1722,   257, 29549,  4336], device='cuda:0'), tensor([1212,  318], device='cuda:0'), tensor([1532,  345, 5602], device='cuda:0'), tensor([ 7936,  3039,    11, 40112], device='cuda:0'), tensor([  40,  423, 1775], device='cuda:0'), tensor([10915,   428,  2168], device='cuda:0'), tensor([10970, 32957,  8779, 42839,   481, 48662], device='cuda:0'), tensor([ 464,  530, 1517], device='cuda:0'), tensor([464, 370], device='cuda:0'), tensor([13448, 35896,   357, 30730,  8127], device='cuda:0'), tensor([    1,  4366,  1952,   379,   262, 19821,  1911], device='cuda:0'), tensor([  40, 2461, 4422], device='cuda:0'), tensor([1212,  318,  257, 2472, 7030,  286], device='cuda:0'), tensor([6109,  640], device='cuda:0'), tensor([ 3260, 11681,   262,  2646,    11,   314,   373], device='cuda:0'), tensor([ 40, 423, 284, 910, 314, 716], device='cuda:0'), tensor([10723,   278,   257, 35026,  5813, 24788,   286], device='cuda:0'), tensor([1532,  345], device='cuda:0'), tensor([12295,  9569], device='cuda:0'), tensor([17439, 10884, 26066,   373], device='cuda:0'), tensor([  32, 9254,  314,  892,  743,  307], device='cuda:0'), tensor([10970, 37707], device='cuda:0'), tensor([   40,   423,  1775,   383, 16374], device='cuda:0'), tensor([  39, 1324, 2945], device='cuda:0'), tensor([   40,   373, 22527,   351,   428,  3807], device='cuda:0'), tensor([  464,   717,  1808,   326, 24747,   284], device='cuda:0'), tensor([  40,  714, 1438], device='cuda:0'), tensor([48387,  2497,   428,   319], device='cuda:0'), tensor([1212,  318, 8941,  257], device='cuda:0'), tensor([  33, 6532,   11], device='cuda:0'), tensor([2514,  307, 5508,   11,  314, 1422], device='cuda:0'), tensor([44960, 16152,    76,   724,   263], device='cuda:0'), tensor([  40, 8288,  428, 6918,   13], device='cuda:0'), tensor([ 4821,   284,  8959, 43832,    11,   355], device='cuda:0'), tensor([14214,  1050,  1417], device='cuda:0'), tensor([  40, 1043,  262,  530,  290], device='cuda:0'), tensor([  40,  460,  470, 1975,  428, 3807,  373], device='cuda:0'), tensor([1212, 2646, 4721,  284], device='cuda:0'), tensor([14698, 16499,   329,   428], device='cuda:0'), tensor([1722, 1290,  355,  314,  760,   11], device='cuda:0'), tensor([  40, 1101,  257], device='cuda:0'), tensor([5703, 2497,  428, 3807,   11], device='cuda:0'), tensor([ 464, 2126,  220], device='cuda:0'), tensor([ 1212,  3807,   318,   530,   286,   616, 39489], device='cuda:0'), tensor([ 1212,   318,   257, 18857,  3807, 22632], device='cuda:0'), tensor([ 1212,   373,   281, 12659], device='cuda:0'), tensor([3260,  644,  314, 1807], device='cuda:0'), tensor([22017,    11,   706,   491,  2140], device='cuda:0'), tensor([ 40, 898], device='cuda:0'), tensor([14731,   261, 13612,   843], device='cuda:0'), tensor([  40,  716,  379,  257, 7310], device='cuda:0'), tensor([ 2504, 10883,  2589,   287], device='cuda:0'), tensor([ 5812,    11, 36378,    13], device='cuda:0'), tensor([2215,  314], device='cuda:0'), tensor([ 7407, 20125, 23259,   531], device='cuda:0'), tensor([  40,  373, 6635, 1786, 1214], device='cuda:0'), tensor([38972,   569,    13,  4995,  7278,   338], device='cuda:0'), tensor([19585,  2094], device='cuda:0'), tensor([  40,  373, 9105,  319,  616, 3996,   11], device='cuda:0'), tensor([  40,  714, 8523], device='cuda:0'), tensor([ 40, 423], device='cuda:0'), tensor([  40,  717, 2497,  428,  618,  314,  373], device='cuda:0'), tensor([1212,  318,  407, 3899], device='cuda:0'), tensor([   1,  464, 8407], device='cuda:0'), tensor([1212,  318,  530,  286,  883], device='cuda:0'), tensor([1722,  257, 3236, 9283], device='cuda:0')]
0it [00:00, ?it/s]
0it [00:00, ?it/s]
{'label': [tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0'), tensor(0, device='cuda:0'), tensor(1, device='cuda:0')], 'input_ids': [tensor([ 1212,  3807,   373,   523, 11234,  3194], device='cuda:0'), tensor([  20, 2431,  656,  428, 3807,  314,  373], device='cuda:0'), tensor([6385,  340], device='cuda:0'), tensor([ 2396,    11, 10335,  5265,   373], device='cuda:0'), tensor([1639,  477,  760,  262, 1621,  286,  366], device='cuda:0'), tensor([  43, 1211,   64, 3469], device='cuda:0'), tensor([  40, 6151,  428], device='cuda:0'), tensor([   40,  1842,  2041,  3048,   290, 31121,   649], device='cuda:0'), tensor([ 2061,   281, 21655,  4019,   338, 21751,    13], device='cuda:0'), tensor([ 1212,  3807,  3181, 10953,   284,   616,  2951], device='cuda:0'), tensor([  40, 1239], device='cuda:0'), tensor([  40,  423, 1239, 1100,  262, 1492,    1], device='cuda:0'), tensor([  40, 1816,  284, 1524], device='cuda:0'), tensor([1212,  318,   11], device='cuda:0'), tensor([1212, 3807,  318], device='cuda:0'), tensor([  818,   257, 15304,   286,   911,   349], device='cuda:0'), tensor([ 40, 460], device='cuda:0'), tensor([  40, 1254,  588,  314, 1053,  655, 7342], device='cuda:0'), tensor([  40, 4240,  703,  262], device='cuda:0'), tensor([5779,  428, 3807, 1682], device='cuda:0'), tensor([   51, 18642,   291,   318,   257,   890], device='cuda:0'), tensor([2215,  314,  373,  625,  379], device='cuda:0'), tensor([8332,  852], device='cuda:0'), tensor([11380,   783,    11,  8781], device='cuda:0'), tensor([1212,  318,  262,  691], device='cuda:0'), tensor([  40, 1107, 8359,  428, 3807,   13], device='cuda:0'), tensor([  40, 8359], device='cuda:0'), tensor([3198, 1517], device='cuda:0'), tensor([16580,  5390, 11096], device='cuda:0'), tensor([28702, 35727, 18348,   316,   468,   925], device='cuda:0'), tensor([7594,  617,  286,  262,  584], device='cuda:0'), tensor([  40, 1682, 2497, 2807], device='cuda:0'), tensor([ 1212, 18611,   390,   311,  3970, 16316,   262], device='cuda:0'), tensor([1662,  534, 7226], device='cuda:0'), tensor([1026, 8833,  284,  502,  326,  617,  286], device='cuda:0'), tensor([   32,  9623, 33081,  8855], device='cuda:0'), tensor([1212, 3807,  318, 2730], device='cuda:0'), tensor([  40, 2727,  616], device='cuda:0'), tensor([3673, 9982,  329,  517,  621], device='cuda:0'), tensor([1212,  318], device='cuda:0'), tensor([  464, 21788,    11,   314,   911,    81], device='cuda:0'), tensor([6109,  523, 1690,  257], device='cuda:0'), tensor([ 464, 6087,  286,  262], device='cuda:0'), tensor([ 3118,   320, 23183,  1346,  8531,    11, 30806], device='cuda:0'), tensor([28292,  2531,   346,  3900,   338, 16711,   286], device='cuda:0'), tensor([8061, 4327], device='cuda:0'), tensor([  40, 7342,  428,  319], device='cuda:0'), tensor([ 3844,    11,   314,   588, 20681,    12], device='cuda:0'), tensor([    6, 26677, 10204,     6,   318,   257,  3807], device='cuda:0'), tensor([ 986,   67,  756, 1100,  597], device='cuda:0'), tensor([ 1722,   428,  3807,   318,  3190,   287, 14780], device='cuda:0'), tensor([1890,  262, 1204,  286,  502], device='cuda:0'), tensor([ 1890,   883,   508,   588, 31193,  7328], device='cuda:0'), tensor([  40, 2497,  428], device='cuda:0'), tensor([2504,  338,  407,  262], device='cuda:0'), tensor([1722, 2582,  355,  314], device='cuda:0'), tensor([ 1212, 28294,  3807], device='cuda:0'), tensor([   37, 10877,  2456,   286,  3215], device='cuda:0'), tensor([16371,   922, 10092], device='cuda:0'), tensor([1212, 2646], device='cuda:0'), tensor([3673,  691,  857], device='cuda:0'), tensor([13409,  3048,    30,  4599, 29847,  1671], device='cuda:0'), tensor([   40,  6151, 35023,  1453,   350], device='cuda:0'), tensor([18274,   353,   288, 11402,    13], device='cuda:0'), tensor([2953, 1551,  329,  257, 2063], device='cuda:0'), tensor([6732,  436, 8821,  284, 2342,  780], device='cuda:0'), tensor([  40, 6405], device='cuda:0'), tensor([  464, 13289], device='cuda:0'), tensor([1212, 2646,  318, 7932,  287], device='cuda:0'), tensor([ 1212, 15674,  3195, 28763,   286], device='cuda:0'), tensor([1212, 3807,  318,  262, 4094, 7030], device='cuda:0'), tensor([2504, 2236], device='cuda:0'), tensor([  32, 7684,  286, 3988,  900,  510], device='cuda:0'), tensor([   40,   373,   845,   555, 11011], device='cuda:0'), tensor([1532,  345,  389,  739, 1511,  393], device='cuda:0'), tensor([22210,   326], device='cuda:0'), tensor([ 7012, 26605], device='cuda:0'), tensor([3666, 3656,  290,  314,  588], device='cuda:0'), tensor([5779,   11,  340, 4753,  318, 5023], device='cuda:0'), tensor([21017,  1338,  9437], device='cuda:0'), tensor([  40, 2314,  329,  262, 1204,  286,  502], device='cuda:0'), tensor([  40, 1053, 1775], device='cuda:0'), tensor([1026,  338], device='cuda:0'), tensor([1212,  318, 5543,  530], device='cuda:0'), tensor([1639,  760,  345,  821,  287], device='cuda:0'), tensor([ 8896, 42357, 41533], device='cuda:0'), tensor([ 464, 2646,  373, 3194,  838,  812,  736], device='cuda:0'), tensor([13295,  2097,   373], device='cuda:0'), tensor([ 52,  70, 456], device='cuda:0'), tensor([23758,   734,   286,  1622], device='cuda:0'), tensor([ 6610,  1257,    11, 45466,    11], device='cuda:0'), tensor([7454, 1263, 2223], device='cuda:0'), tensor([  40, 3443], device='cuda:0'), tensor([ 464, 1917,  351,  366,  464], device='cuda:0'), tensor([15001,   319,   262], device='cuda:0'), tensor([ 9452,  4402,  4226,    11, 10926], device='cuda:0'), tensor([ 1858,   373,   617, 29592,   422,   616,   636], device='cuda:0'), tensor([18227,  4177,    36,  4261, 32043], device='cuda:0'), tensor([1212, 2646], device='cuda:0'), tensor([ 40, 423], device='cuda:0'), tensor([1212, 3807, 8097], device='cuda:0'), tensor([ 2061,   281, 47757,  2085,   286,   257], device='cuda:0'), tensor([  32, 1545, 1752, 1297], device='cuda:0'), tensor([3260,  366, 8248, 6176], device='cuda:0'), tensor([5779,   11], device='cuda:0'), tensor([3673,  355, 2089,  355,  345, 1053, 2982], device='cuda:0'), tensor([   40,  2497,   262, 12268], device='cuda:0'), tensor([ 1890,   257, 42047,  6260,    11, 37684,  9659], device='cuda:0'), tensor([   40, 11691,   262,  8713, 17328], device='cuda:0'), tensor([13710,   407,   262,  4112], device='cuda:0'), tensor([1026, 1718,  257,  890], device='cuda:0'), tensor([ 7414, 40543,     7, 26953, 22261, 10797], device='cuda:0'), tensor([  40, 1107], device='cuda:0'), tensor([ 3260,   366,    32, 32052], device='cuda:0'), tensor([5779,   11], device='cuda:0'), tensor([   40,  2497, 11740, 31140,   618,   314], device='cuda:0'), tensor([ 1212, 10530,   318, 32343], device='cuda:0'), tensor([31080,   318], device='cuda:0'), tensor([1858,  318,  257, 1643,  286], device='cuda:0'), tensor([3666, 1995, 1718,  502,  284,  766,  428], device='cuda:0'), tensor([   27,  1671,  1220,  6927,  1671, 11037,    40], device='cuda:0'), tensor([  40,  760, 2147,  286], device='cuda:0'), tensor([ 1212,  2646,   373,   523, 18585,   680], device='cuda:0'), tensor([2061,  257], device='cuda:0'), tensor([36376,   287,   262], device='cuda:0'), tensor([11610,  1040,   286,   262,  7276, 15682,  1222], device='cuda:0'), tensor([1026, 1139,  326], device='cuda:0'), tensor([1212, 3807], device='cuda:0')], 'query': ['This movie was so badly written', '5 minutes into this movie I was', 'Since it', 'So, Prom Night was', 'You all know the story of "', 'Lorna Green', 'I loved this', 'I love special effects and witnessing new', "What an overlooked 80's soundtrack.", 'This movie brought tears to my eyes', 'I never', 'I have never read the book"', 'I went to school', 'This is,', 'This movie is', 'In a variant of Shol', 'I can', "I feel like I've just watched", 'I wonder how the', 'Well this movie actually', 'Titanic is a long', 'When I was over at', 'Despite being', 'OK now, lets', 'This is the only', 'I really enjoyed this movie.', 'I enjoyed', 'One thing', 'NOTE TO ALL', 'Director Sidney Lumet has made', 'Like some of the other', 'I actually saw China', 'This obscure de Sica delivers the', 'not your typical', 'It occurs to me that some of', 'A fantastic Arabian adventure', 'This movie is defin', 'I created my', 'Notorious for more than', 'This is', 'The Honey, I Shr', 'Every so often a', 'The combination of the', 'Unimaginably stupid, redundant', "Steven Speilberg's adaptation of", 'People tend', 'I watched this on', 'Now, I like sci-', "'Cry Freedom' is a movie", '...dont read any', 'As this movie is completely in Swiss', 'For the life of me', 'For those who like depressing films', 'I saw this', "That's not the", 'As soon as I', 'This fabulous movie', 'Famous words of foreign', 'Very good dramatic', 'This film', 'Not only does', 'Special effects? Good.<br', 'I loved Dedee P', 'Utter dreck.', 'At least for a half', 'Frustrating to watch because', 'I married', 'The performances', 'This film is wonderful in', 'This 1973 TV remake of', 'This movie is the biggest waste', 'That shall', 'A bunch of kids set up', 'I was very unimp', 'If you are under 13 or', 'Something that', 'ba ba', 'My wife and I like', 'Well, it definitely is unlike', '### Spoil', 'I cannot for the life of me', "I've seen", "It's", 'This is absolutely one', "You know you're in", 'Keanu Reeves', 'The film was written 10 years back', 'Full House was', 'Uggh', 'Episode two of season', 'Another fun, witty,', 'Once big action', 'I finally', 'The problem with "The', 'Based on the', 'Minimal script, minimal', 'There was some hesitation from my part', 'DOCTEUR PET', 'This film', 'I have', 'This movie forever', 'What an incomprehensible mess of a', 'A friend once told', 'After "Star Wars', 'Well,', "Not as bad as you've heard", 'I saw the trailer', 'For a comedic writer, Woody Allen', 'I suppose the ultimate curse', 'Perhaps not the absolute', 'It took a long', 'Flavia(Florinda Bol', 'I really', 'After "A Dirty', 'Well,', 'I saw Dick Tracy when I', 'This musical is decidedly', 'Guy is', 'There is a bit of', 'My mom took me to see this', '<br /><br />I', 'I know nothing of', 'This film was so amateurish', 'What a', 'Living in the', 'Origins of the Care Bears &', 'It says that', 'This movie']}
0it [00:00, ?it/s]
0it [00:00, ?it/s]
dict_keys(['label', 'input_ids', 'query'])
dict_keys(['label', 'input_ids', 'query'])
0it [00:00, ?it/s]
dict_keys(['label', 'input_ids', 'query'])
0it [00:00, ?it/s]
dict_keys(['label', 'input_ids', 'query'])
0it [00:00, ?it/s]The attention mask is not set and cannot be inferred from input because pad token is same as eos token. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
0it [00:15, ?it/s]
dict_keys(['label', 'input_ids', 'query'])

0it [00:13, ?it/s]
[tensor([1532,  345, 2883, 4379,  644], device='cuda:0'), tensor([ 464, 1808], device='cuda:0'), tensor([392, 644, 257], device='cuda:0'), tensor([ 4863,   262,  4688, 21684], device='cuda:0'), tensor([1212, 3807,  318], device='cuda:0'), tensor([1212, 3807,  468, 1464,  587,  616], device='cuda:0'), tensor([  32, 1310, 2576,  338, 2636, 1767,  318], device='cuda:0'), tensor([1212, 9738, 3892,   12, 1462], device='cuda:0'), tensor([4863,  262, 6260,  286,  366, 2061], device='cuda:0'), tensor([1212, 2646,  318,  281, 6275], device='cuda:0'), tensor([  40, 2497,  428, 3807,  416, 5778, 7415], device='cuda:0'), tensor([  40, 2921,  428,  517,  621,  257], device='cuda:0'), tensor([ 3198,   286,   883, 21104,  8157,  6918], device='cuda:0'), tensor([1858,  389,  617, 1243,  314,  481, 1239], device='cuda:0'), tensor([ 3260,  4964,   617,   286, 18804,   338,  1049], device='cuda:0'), tensor([ 1212,   318,   281,  4457,    12, 44548], device='cuda:0'), tensor([  464,  3807, 15192,   284], device='cuda:0'), tensor([24111,  2646, 13445,  2555,   284], device='cuda:0'), tensor([1212, 3999, 3807,  925,  502, 1254], device='cuda:0'), tensor([18357,   257, 13741,  3640, 10428], device='cuda:0'), tensor([  464,  3112, 44818], device='cuda:0'), tensor([7003, 5147], device='cuda:0'), tensor([   33,  3325, 21995,  1625,   284], device='cuda:0'), tensor([  40, 3505, 1016], device='cuda:0'), tensor([44683,   326], device='cuda:0'), tensor([1722,  262], device='cuda:0'), tensor([  40,  442, 2903, 2402,  428, 3807,  780], device='cuda:0'), tensor([15645,    11,   281,  8197,  3367,   286], device='cuda:0'), tensor([1026, 8833,  284,  502,  326,  617,  286], device='cuda:0'), tensor([  40, 3521], device='cuda:0'), tensor([1212, 3807,  318], device='cuda:0'), tensor([  40, 1053, 7342], device='cuda:0'), tensor([   44, 44886], device='cuda:0'), tensor([ 2061, 26101,   536,   282,  3900,   750,   287], device='cuda:0'), tensor([  40, 1100,  262], device='cuda:0'), tensor([1026,  338, 1327], device='cuda:0'), tensor([1212,  373,  257, 2342,  540, 3807], device='cuda:0'), tensor([ 6, 40], device='cuda:0'), tensor([  40,  373, 9670], device='cuda:0'), tensor([   53, 27933, 31280,    13, 23274,  4940], device='cuda:0'), tensor([3673,  257,  845,  922, 3807], device='cuda:0'), tensor([  42, 5757], device='cuda:0'), tensor([14698,   645,  3725], device='cuda:0'), tensor([ 40, 836, 470], device='cuda:0'), tensor([11158,  1312,  1807,  2130,   318,  1016], device='cuda:0'), tensor([  40, 1053,  587, 2111,  284], device='cuda:0'), tensor([1199, 2238,   12, 7081,   11,  326], device='cuda:0'), tensor([1212,  318,  530,  286,  262, 1049, 6918], device='cuda:0'), tensor([  40,  655, 2497,  428,  938], device='cuda:0'), tensor([1212,  318,  262], device='cuda:0'), tensor([23581, 12191,   355,   340], device='cuda:0'), tensor([  818, 36494, 17853,  3595,  5338], device='cuda:0'), tensor([3666, 8402], device='cuda:0'), tensor([4863, 3437], device='cuda:0'), tensor([  40, 2497], device='cuda:0'), tensor([  40, 2497], device='cuda:0'), tensor([1532,  345], device='cuda:0'), tensor([    1, 10814,  7288,     0,   314], device='cuda:0'), tensor([   1,   32, 6786, 8362,    1,  318], device='cuda:0'), tensor([5779,   11,  612,  318], device='cuda:0'), tensor([1212,  318,  257, 5278, 6706,  408], device='cuda:0'), tensor([  40, 6348,  510,  357], device='cuda:0'), tensor([1026,  373], device='cuda:0'), tensor([2396,  262,  584, 1755], device='cuda:0'), tensor([41910,   318,   257], device='cuda:0'), tensor([10915,   314,   460,   470], device='cuda:0'), tensor([16454,    11], device='cuda:0'), tensor([1026, 1107, 1595,  470], device='cuda:0'), tensor([  40,  373, 7317], device='cuda:0'), tensor([13898,    11,   287,  2663], device='cuda:0'), tensor([11633,    77,   470,  1337,   329,   262,  3807], device='cuda:0'), tensor([28782,   805,    11,   900,   262,   835,  1891], device='cuda:0'), tensor([14945,  1621,  3951,   389,   987,    86, 16206], device='cuda:0'), tensor([1212, 3807,  338], device='cuda:0'), tensor([ 1174,  4303, 49713,  1137,  8355, 17395,  1174], device='cuda:0'), tensor([1212, 2646], device='cuda:0'), tensor([  261,   262, 10388,   284,   262,  1048], device='cuda:0'), tensor([  40, 3636,  470,  869], device='cuda:0'), tensor([  40, 2342], device='cuda:0'), tensor([42904,   541,   453,   340], device='cuda:0'), tensor([   40,  5839,   428,  7026,   422,   262, 14447], device='cuda:0'), tensor([ 1212,   318,   257, 36660,    11,  3665], device='cuda:0'), tensor([   32,   880,    12, 40867,   276,  3807,   546], device='cuda:0'), tensor([ 3198,   286,   262,   867, 49326,  2462], device='cuda:0'), tensor([   40,   716, 15295, 44459,   290,   428], device='cuda:0'), tensor([3198, 1573,  460, 6901,  428, 3807], device='cuda:0'), tensor([24795,  4988], device='cuda:0'), tensor([10723,   278,   366,   464,  5426], device='cuda:0'), tensor([5756,  502], device='cuda:0'), tensor([  464,  7110,  5238, 29627,  3499], device='cuda:0'), tensor([    6,  3198,    12, 22685], device='cuda:0'), tensor([6943,  661,   11, 2592, 1862,  661], device='cuda:0'), tensor([  40, 1043,  428, 2646,  262,  717], device='cuda:0'), tensor([ 2061,   257, 18359,  3350, 29847,  1671,  1220], device='cuda:0'), tensor([ 1174,  4303, 49713,  4877], device='cuda:0'), tensor([    1,   464,  4586, 17084,     1,   318], device='cuda:0'), tensor([ 3673,  1719,  1100, 36099,   482,   709,    11], device='cuda:0'), tensor([1026,  338, 8258,   13,  632], device='cuda:0'), tensor([4366,  661,  423, 5081], device='cuda:0'), tensor([  40,  716,  257, 4336], device='cuda:0'), tensor([12418, 12709,  5870, 11860,    50], device='cuda:0'), tensor([11633,    77,   470], device='cuda:0'), tensor([46068,  1174], device='cuda:0'), tensor([38951,  2576,  5302, 21952, 12164], device='cuda:0'), tensor([16371, 13114,  3807,   351], device='cuda:0'), tensor([   40,   460, 11512,  9159,   357], device='cuda:0'), tensor([1212, 4286, 2067,  503,  351,  922], device='cuda:0'), tensor([1212, 1611], device='cuda:0'), tensor([10915,   407], device='cuda:0'), tensor([ 1212,   318,   281, 24655,   284,  2506], device='cuda:0'), tensor([5005,  311, 3970,  318, 5033,  530,  286], device='cuda:0'), tensor([1212,  366], device='cuda:0'), tensor([28211,  1297,   502,   326], device='cuda:0'), tensor([  818, 19170,    11,   384, 10546,  3899], device='cuda:0'), tensor([ 40, 423, 284, 910, 326], device='cuda:0'), tensor([ 1925, 18052,  1595,   470,   772,  2221], device='cuda:0'), tensor([3198,  286,  262], device='cuda:0'), tensor([ 1026,   318, 24479,   326,   257,  4226,   355], device='cuda:0'), tensor([  32, 8402,  338], device='cuda:0'), tensor([34379,    14, 28702,    14], device='cuda:0'), tensor([   32,   336, 33598,  7110,    11,   555, 47914], device='cuda:0'), tensor([10910,    11,  2081,  9846,    13,   314], device='cuda:0'), tensor([8332,  663], device='cuda:0'), tensor([ 35, 724,  11], device='cuda:0'), tensor([1026,  338, 3499,  284,  766], device='cuda:0'), tensor([ 1212,  1327,    12, 48320,    11], device='cuda:0'), tensor([   72,   655,  1392, 36907], device='cuda:0'), tensor([14698,  1239,  1775,   262,  2656], device='cuda:0')]
[tensor(2.7309), tensor(0.7826), tensor(2.5262), tensor(1.7179), tensor(2.4995), tensor(2.5815), tensor(0.2514), tensor(0.7810), tensor(2.6713), tensor(2.7861), tensor(0.4562), tensor(0.0970), tensor(2.8981), tensor(1.0870), tensor(1.5063), tensor(2.6012), tensor(1.2833), tensor(2.4486), tensor(1.1402), tensor(1.5393), tensor(1.2514), tensor(1.0533), tensor(0.9227), tensor(0.6831), tensor(-1.3363), tensor(-1.4720), tensor(0.0602), tensor(0.3993), tensor(-0.7562), tensor(-0.9328), tensor(-3.0694), tensor(2.0615), tensor(2.0629), tensor(2.3683), tensor(0.3975), tensor(-1.5239), tensor(-2.6461), tensor(-0.2015), tensor(0.2636), tensor(-0.2887), tensor(-2.5686), tensor(-0.5583), tensor(-2.4740), tensor(-0.4919), tensor(1.1847), tensor(-1.2385), tensor(1.7645), tensor(2.6291), tensor(1.9997), tensor(1.5503), tensor(2.1147), tensor(-0.6227), tensor(2.5207), tensor(1.7920), tensor(-1.6457), tensor(-0.7939), tensor(-0.5206), tensor(0.5603), tensor(2.6460), tensor(1.5470), tensor(0.6749), tensor(1.4944), tensor(1.4094), tensor(0.3338), tensor(1.1411), tensor(-2.4922), tensor(0.0335), tensor(-2.6951), tensor(-0.3138), tensor(-0.8122), tensor(-2.3672), tensor(0.4924), tensor(1.5338), tensor(2.5969), tensor(-0.4988), tensor(1.7305), tensor(0.9992), tensor(-1.0456), tensor(0.6857), tensor(0.1886), tensor(-1.1732), tensor(0.7807), tensor(1.2384), tensor(2.6125), tensor(2.4613), tensor(-0.9280), tensor(0.5844), tensor(0.3587), tensor(0.6436), tensor(-2.5931), tensor(-0.2522), tensor(1.5026), tensor(-1.0640), tensor(-2.7589), tensor(-1.4039), tensor(2.7795), tensor(0.4725), tensor(2.0938), tensor(-2.5027), tensor(1.3934), tensor(-0.7202), tensor(-1.4414), tensor(-0.9407), tensor(0.7963), tensor(-2.8377), tensor(0.6654), tensor(1.2725), tensor(-2.0936), tensor(0.7207), tensor(-2.7112), tensor(2.2827), tensor(1.9920), tensor(-2.2297), tensor(0.4363), tensor(-2.0302), tensor(-0.6811), tensor(2.4684), tensor(-0.8680), tensor(1.9169), tensor(0.7772), tensor(-2.9914), tensor(2.0287), tensor(0.4297), tensor(-2.4756), tensor(0.0984), tensor(2.7405), tensor(-0.5527), tensor(0.4791)]
0it [00:00, ?it/s]

0it [00:02, ?it/s]
